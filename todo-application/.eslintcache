[{"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\index.js":"1","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\App.js":"2","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\Dashboard.jsx":"3","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\store.js":"4","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\reducer.js":"5","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actionTypes.js":"6","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\localStorage.js":"7","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actions.js":"8","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\TodoCard.jsx":"9"},{"size":378,"mtime":1607789719811,"results":"10","hashOfConfig":"11"},{"size":261,"mtime":1607797282176,"results":"12","hashOfConfig":"11"},{"size":3628,"mtime":1607840331041,"results":"13","hashOfConfig":"11"},{"size":503,"mtime":1607790762825,"results":"14","hashOfConfig":"11"},{"size":1784,"mtime":1607840587074,"results":"15","hashOfConfig":"11"},{"size":108,"mtime":1607839703210,"results":"16","hashOfConfig":"11"},{"size":393,"mtime":1607839950851,"results":"17","hashOfConfig":"11"},{"size":942,"mtime":1607839807333,"results":"18","hashOfConfig":"11"},{"size":1565,"mtime":1607841912380,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11upfgg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\index.js",[],["41","42"],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\App.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\Dashboard.jsx",["43","44","45","46","47"],"import React, { useState, useEffect } from 'react';\r\nimport './module.dashboard.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\nimport { handleAddTask, reset } from '../Redux/App/actions';\r\nimport TodoCard from './TodoCard';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        marginLeft: '10px',\r\n        padding: '15px'\r\n    }\r\n}));\r\n\r\nfunction Dashboard() {\r\n    const classes = useStyles();\r\n    const [ task, setTask ] = useState('');\r\n    const pending = useSelector((state) => state.app.pending) || [];\r\n    const completedTodo = useSelector((state) => state.app.completedTodo) || [];\r\n    const sortByTime = useSelector((state) => state.app.sortByTime);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        setTask(e.target.value);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        dispatch(handleAddTask(task));\r\n        setTask('');\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.which === 13) {\r\n            handleAdd();\r\n        }\r\n    };\r\n\r\n    const handleReset = () => {\r\n        dispatch(reset())\r\n        \r\n    }\r\n\r\n    \r\n    console.log('todo', pending);\r\n    console.log('completedTodo', completedTodo)\r\n    console.log('sort', sortByTime);\r\n    return (\r\n        <div className=\"dashboard__container\">\r\n            <button onClick = {handleReset}>Reset</button>\r\n            <div className=\"dashboard__input\">\r\n                <TextField\r\n                    id=\"filled-password-input\"\r\n                    label=\"Add a Task\"\r\n                    value={task}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleAdd}>\r\n                    Add Task\r\n                </Button>\r\n            </div>\r\n            <div className = \"dashboard__list\">\r\n                {\r\n                    pending && pending\r\n                    .sort((a,b)=>{\r\n                        if(sortByTime === null){\r\n                            return 0\r\n                        }\r\n                        if(sortByTime === \"asc\"){\r\n                            return a.creationTime - b.creationTime\r\n                        }\r\n                        else if(sortByTime === \"desc\"){\r\n                            return b.creationTime - a.creationTime\r\n                        }\r\n                    }).map((item) => (\r\n                        <TodoCard key = {item.id} data = {item}/>\r\n                    ))\r\n                }\r\n                {\r\n                    completedTodo && completedTodo\r\n                    .sort((a,b)=>{\r\n                        if(sortByTime === null){\r\n                            return 0\r\n                        }\r\n                        if(sortByTime === \"asc\"){\r\n                            return a.completionTime - b.completionTime\r\n                        }\r\n                        else if(sortByTime === \"desc\"){\r\n                            return b.completionTime - a.completionTime\r\n                        }\r\n                    }).map((item) => (\r\n                        <TodoCard name = {item.id} key = {item.id} data = {item}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\store.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\reducer.js",["48"],"import { ADD_TASK, TOGGLE_TASK, RESET } from './actionTypes';\r\nimport { loadData, saveData, removeData } from '../localStorage';\r\n\r\nexport const initState = {\r\n    todo: loadData('tasks') || [],\r\n    completedTodo: loadData('completed') || [],\r\n    pending: loadData('pending') || [],\r\n    sortByTime: 'desc'\r\n};\r\n\r\nconst reducer = (state = initState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_TASK:\r\n            saveData('tasks', [ ...state.todo, payload ]);\r\n            saveData('pending', [ ...state.pending, payload ]);\r\n            console.log('reducer', payload);\r\n            return {\r\n                ...state,\r\n                todo: [ ...state.todo, payload ],\r\n                pending: [ ...state.pending, payload ]\r\n            };\r\n\r\n        case TOGGLE_TASK:\r\n            let newTodo = state.todo.find((item) => item.id === payload);\r\n            newTodo.status = !newTodo.status;\r\n            newTodo.completionTime = Date.now();\r\n            saveData('completed', [ ...state.completedTodo, newTodo ]);\r\n            saveData('pending', state.pending.filter((item) => item.id !== payload));\r\n\r\n            if (newTodo.status) {\r\n                return {\r\n                    ...state,\r\n                    pending: state.pending.filter((item) => item.id !== payload),\r\n                    completedTodo: [ ...state.completedTodo, newTodo ]\r\n                };\r\n            }\r\n\r\n        case RESET:\r\n            removeData('tasks');\r\n            removeData('pending');\r\n            removeData('completed');\r\n            return {\r\n                ...state,\r\n                pending: [],\r\n                completedTodo: [],\r\n                todo: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actionTypes.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\localStorage.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actions.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\TodoCard.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"57","line":7,"column":16,"nodeType":"55","messageId":"56","endLine":7,"endColumn":20},{"ruleId":"53","severity":1,"message":"58","line":8,"column":8,"nodeType":"55","messageId":"56","endLine":8,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":71,"column":32,"nodeType":"61","messageId":"62","endLine":71,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":87,"column":32,"nodeType":"61","messageId":"62","endLine":87,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":38,"column":9,"nodeType":"65","messageId":"66","endLine":47,"endColumn":15},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'uuid' is defined but never used.","'axios' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]