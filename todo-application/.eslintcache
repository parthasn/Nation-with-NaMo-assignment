[{"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\index.js":"1","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\App.js":"2","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\Dashboard.jsx":"3","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\store.js":"4","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\reducer.js":"5","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actionTypes.js":"6","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\localStorage.js":"7","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actions.js":"8","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\TodoCard.jsx":"9","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\FilterBox.jsx":"10"},{"size":378,"mtime":1607789719811,"results":"11","hashOfConfig":"12"},{"size":261,"mtime":1607797282176,"results":"13","hashOfConfig":"12"},{"size":5170,"mtime":1607887036780,"results":"14","hashOfConfig":"12"},{"size":503,"mtime":1607790762825,"results":"15","hashOfConfig":"12"},{"size":2515,"mtime":1607921817630,"results":"16","hashOfConfig":"12"},{"size":266,"mtime":1607870020955,"results":"17","hashOfConfig":"12"},{"size":1078,"mtime":1607872024581,"results":"18","hashOfConfig":"12"},{"size":1213,"mtime":1607887062450,"results":"19","hashOfConfig":"12"},{"size":3730,"mtime":1607916716645,"results":"20","hashOfConfig":"12"},{"size":583,"mtime":1607887031055,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11upfgg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\index.js",[],["44","45"],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\App.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\Dashboard.jsx",["46","47","48","49"],"import React, { useState } from 'react';\r\nimport './module.dashboard.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleAddTask, reset } from '../Redux/App/actions';\r\nimport TodoCard from './TodoCard';\r\nimport FilterBox from './FilterBox';\r\n\r\nfunction Dashboard() {\r\n    const [ task, setTask ] = useState('');\r\n    const pending = useSelector((state) => state.app.pending) || [];\r\n    const filterBy = useSelector((state) => state.app.filterBy) || [];\r\n    const completedTodo = useSelector((state) => state.app.completedTodo) || [];\r\n    const sortByTime = useSelector((state) => state.app.sortByTime);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        setTask(e.target.value);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        if (task === '') {\r\n            alert('Task cannot be empty');\r\n        } else {\r\n            dispatch(handleAddTask(task));\r\n            setTask('');\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.which === 13) {\r\n            handleAdd();\r\n        }\r\n    };\r\n\r\n    const handleReset = () => {\r\n        dispatch(reset());\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard__inputDiv\">\r\n                <input\r\n                    className=\"dashboard__input\"\r\n                    placeholder=\"Add a Task\"\r\n                    value={task}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n                <img\r\n                    src=\"https://cdn0.iconfinder.com/data/icons/essentials-solid/100/Refresh-512.png\"\r\n                    alt=\"reset\"\r\n                    className=\"dashboard__reset\"\r\n                    onClick={handleReset}\r\n                />\r\n            </div>\r\n            <hr className=\"dashboard__hr\" />\r\n            <div className=\"dashboard__filter\">\r\n                <h3>Filter By:</h3>\r\n                {filterBy && filterBy.map((item) => <FilterBox key={item} data={item} />)}\r\n            </div>\r\n\r\n            <div className=\"dashboard__list\">\r\n                <h3 className=\"dashboard__heading\">Pending Tasks:</h3>\r\n                {pending &&\r\n                    pending\r\n                        .filter((item) => {\r\n                            if (!filterBy.length) {\r\n                                return item;\r\n                            }\r\n                            let numOfCriteriaMatching = 0;\r\n                            for (let i = 0; i < filterBy.length; i++) {\r\n                                if (item.hashtagList.includes(filterBy[i].toLowerCase())) {\r\n                                    numOfCriteriaMatching++;\r\n                                }\r\n                            }\r\n                            if (numOfCriteriaMatching === filterBy.length) {\r\n                                return item;\r\n                            }\r\n                        })\r\n                        .sort((a, b) => {\r\n                            if (sortByTime === null) {\r\n                                return 0;\r\n                            }\r\n                            if (sortByTime === 'asc') {\r\n                                return a.creationTime - b.creationTime;\r\n                            } else if (sortByTime === 'desc') {\r\n                                return b.creationTime - a.creationTime;\r\n                            }\r\n                        })\r\n                        .map((item) => <TodoCard key={item.id} data={item} />)}\r\n                <br />\r\n                <hr className=\"dashboard__hr\" />\r\n                <h3 className=\"dashboard__heading\">Completed Tasks:</h3>\r\n                {completedTodo &&\r\n                    completedTodo\r\n                        .filter((item) => {\r\n                            if (!filterBy.length) {\r\n                                return item;\r\n                            }\r\n                            let numOfCriteriaMatching = 0;\r\n                            for (let i = 0; i < filterBy.length; i++) {\r\n                                if (item.hashtagList.includes(filterBy[i].toLowerCase())) {\r\n                                    numOfCriteriaMatching++;\r\n                                }\r\n                            }\r\n                            if (numOfCriteriaMatching === filterBy.length) {\r\n                                return item;\r\n                            }\r\n                        })\r\n                        .sort((a, b) => {\r\n                            if (sortByTime === null) {\r\n                                return 0;\r\n                            }\r\n                            if (sortByTime === 'asc') {\r\n                                return a.completionTime - b.completionTime;\r\n                            } else if (sortByTime === 'desc') {\r\n                                return b.completionTime - a.completionTime;\r\n                            }\r\n                        })\r\n                        .map((item) => <TodoCard name={item.id} key={item.id} data={item} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\store.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\reducer.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actionTypes.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\localStorage.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Redux\\App\\actions.js",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\TodoCard.jsx",[],"C:\\Users\\avin1103\\Desktop\\Nation-with-NaMo-assignment\\todo-application\\src\\Components\\FilterBox.jsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":67,"column":40,"nodeType":"56","messageId":"57","endLine":67,"endColumn":42},{"ruleId":"54","severity":1,"message":"58","line":81,"column":38,"nodeType":"56","messageId":"57","endLine":81,"endColumn":40},{"ruleId":"54","severity":1,"message":"55","line":97,"column":40,"nodeType":"56","messageId":"57","endLine":97,"endColumn":42},{"ruleId":"54","severity":1,"message":"58","line":111,"column":38,"nodeType":"56","messageId":"57","endLine":111,"endColumn":40},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.sort() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation"]